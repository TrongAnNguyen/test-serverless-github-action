name: Natsoft Serverless

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      BRANCH:
        description: 'Branch to run the deployment'
        type: choice
        required: true
        default: 'staging'
        options:
          - main
          - staging
          - develop
      ENVIRONMENT:
        description: 'Environment to run the deployment'
        type: choice
        required: true
        default: 'staging'
        options:
          - production
          - staging
          - develop

jobs:
  serverless-deploy:
    name: Serverless deploy
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENVIRONMENT }}
    env:
      NODE_OPTIONS: '--max_old_space_size=8192'
      SUPERCAR_TRANSFORMER_PORT: ${{ secrets.API_NATSOFT_TRANSFORMER_PORT }}
      NODE_ENV: ${{ inputs.ENVIRONMENT }}
      FIREBASE_SERVICE_ACCOUNT_PATH: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_PATH }}
      S3_BUCKET: ${{ secrets.API_NATSOFT_S3_BUCKET }}
      IAM_ROLE: ${{ secrets.API_NATSOFT_IAM_ROLE }}
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.BRANCH }}

      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: 💿 Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: 🏗 Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 📦 Install deps (with cache)
        run: pnpm install

      - name: Add ${{ secrets.FIREBASE_SERVICE_ACCOUNT_PATH }} to the root
        working-directory: ./apps/api-natsoft
        run: echo ${{ secrets.FIREBASE_SERVICES_JSON_BASE_64 }} | base64 -d > ${{ secrets.FIREBASE_SERVICE_ACCOUNT_PATH }}

      - name: Serverless deploy ${{ inputs.ENVIRONMENT }}
        uses: serverless/github-action@v3.2
        with:
          args: -c "cd ./apps/api-natsoft && serverless deploy --stage ${{ inputs.ENVIRONMENT }} --region ap-southeast-2"
          entrypoint: /bin/sh
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
